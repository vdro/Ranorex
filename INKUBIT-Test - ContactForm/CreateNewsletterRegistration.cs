///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace INKUBIT_Test___ContactForm
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateNewsletterRegistration recording.
    /// </summary>
    [TestModule("42604412-5c56-4df5-a5b9-847b17facf40", ModuleType.Recording, 1)]
    public partial class CreateNewsletterRegistration : ITestModule
    {
        /// <summary>
        /// Holds an instance of the INKUBIT_Test___ContactFormRepository repository.
        /// </summary>
        public static INKUBIT_Test___ContactFormRepository repo = INKUBIT_Test___ContactFormRepository.Instance;

        static CreateNewsletterRegistration instance = new CreateNewsletterRegistration();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateNewsletterRegistration()
        {
            Validate_Newsletter = "Thank you for your registration.";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateNewsletterRegistration Instance
        {
            get { return instance; }
        }

#region Variables

        string _Validate_Newsletter;

        /// <summary>
        /// Gets or sets the value of variable Validate_Newsletter.
        /// </summary>
        [TestVariable("6a6a3751-cb68-440e-8c5e-d7603bbfaf2f")]
        public string Validate_Newsletter
        {
            get { return _Validate_Newsletter; }
            set { _Validate_Newsletter = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'https://test.inkubit.com/en-us/' with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("https://test.inkubit.com/en-us/", "Chrome", "", false, false, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'INKUBITMicrosoftDynamics365CRMCon.Contact' at 42;25.", repo.INKUBITMicrosoftDynamics365CRMCon.ContactInfo, new RecordItemIndex(2));
            repo.INKUBITMicrosoftDynamics365CRMCon.Contact.Click("42;25");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(3));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'INKUBITMicrosoftDynamics365CRMCon.REGISTER' at 39;6.", repo.INKUBITMicrosoftDynamics365CRMCon.REGISTERInfo, new RecordItemIndex(4));
            repo.INKUBITMicrosoftDynamics365CRMCon.REGISTER.Click("39;6");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'INKUBITMicrosoftDynamics365CRMCon.InputEmail' at 108;22.", repo.INKUBITMicrosoftDynamics365CRMCon.InputEmailInfo, new RecordItemIndex(5));
            repo.INKUBITMicrosoftDynamics365CRMCon.InputEmail.Click("108;22");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'ranorex.studio{RShiftKey down}@{RShiftKey up}gmail.com' with focus on 'INKUBITMicrosoftDynamics365CRMCon.InputEmail'.", repo.INKUBITMicrosoftDynamics365CRMCon.InputEmailInfo, new RecordItemIndex(6));
            repo.INKUBITMicrosoftDynamics365CRMCon.InputEmail.PressKeys("ranorex.studio{RShiftKey down}@{RShiftKey up}gmail.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'INKUBITMicrosoftDynamics365CRMCon.REGISTER1' at 31;9.", repo.INKUBITMicrosoftDynamics365CRMCon.REGISTER1Info, new RecordItemIndex(7));
            repo.INKUBITMicrosoftDynamics365CRMCon.REGISTER1.Click("31;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(8));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Validate_Newsletter) on item 'INKUBITMicrosoftDynamics365CRMCon.ThankYouForYourRegistration'.", repo.INKUBITMicrosoftDynamics365CRMCon.ThankYouForYourRegistrationInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.INKUBITMicrosoftDynamics365CRMCon.ThankYouForYourRegistrationInfo, "InnerText", Validate_Newsletter);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'INKUBITMicrosoftDynamics365CRMCon'.", repo.INKUBITMicrosoftDynamics365CRMCon.SelfInfo, new RecordItemIndex(10));
            Host.Current.CloseApplication(repo.INKUBITMicrosoftDynamics365CRMCon.Self, 100);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
